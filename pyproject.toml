[build-system]
# Especifica que Hatchling se utiliza como backend de construcción
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dotfiles" # Nombre del paquete
version = "0.1.0" # Versión inicial
description = "Instalador de paquetes y dotfiles" # Breve descripción
readme = "README.md" # Archivo de documentación principal
requires-python = ">=3.8" # Versión mínima de Python soportada
license = { file = "LICENSE" } # Archivo de licencia, si existe
authors = [
  { name = "Luis Guillermo Echenique", email = "elepistemedev@gmail.com" },
]
dependencies = [
    "click>=8.1.8",
] # Dependencias del proyecto
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License", # Cambia según la licencia que uses
  "Operating System :: OS Independent",
]
[tool.hatch.metadata]
# Configuración adicional opcional para hatch
authors = ["Luis Guillermo Echenique <elepistemedev@gmail.com>"]

[tool.hatch.build.targets.wheel]
# Especifica los paquetes a incluir en el wheel
packages = ["src"]

[tool.hatch.version]
# Configuración de manejo de versiones (opcional)
path = "src/core/__init__.py" # Archivo donde resides la versión

[tool.pytest.ini_options]
# Opciones de configuración para pytest
minversion = "7.0"
addopts = "-ra -q"
testpaths = ["tests"]

[tool.ruff]
# Configuración para Ruff
target-version = "py38" # Versión objetivo de Python
select = ["F", "E"]     # Opciones de linting

[tool.pre-commit]
# Configuración opcional para pre-commit hooks
default_stages = ["commit", "push"]

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-cov>=5.0.0",
    "ruff>=0.9.2",
]
